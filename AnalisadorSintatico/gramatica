program         ::= { stmt }

stmt            ::= decl ";"
                 | assign ";"
                 | if_stmt
                 | for_stmt
                 | block
                 | print_stmt ";"

decl            ::= type identifier "=" expr

assign          ::= identifier "=" expr

type            ::= "int" | "float" | "string"

if_stmt         ::= "if" "(" expr ")" block

for_stmt        ::= "for" "(" assign ";" expr ";" assign ")" block

print_stmt      ::= "print" "(" literal ")"

block           ::= "{" { stmt } "}"

expr            ::= term { ("+" | "-" | "*" | "/" | ">" | "<" | "==" | "!=") term }

term            ::= identifier | number | literal | "(" expr ")"

identifier      ::= [a-zA-Z_][a-zA-Z0-9_]*
number          ::= [0-9]+ ("." [0-9]+)?
literal         ::= '"' .* '"' | '\'' .*





